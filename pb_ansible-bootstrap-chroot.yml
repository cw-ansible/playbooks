---
#
# Bootstrap ansible on fresh new installed server
#
# Should be run as root user
#
#   ansible-playbook -i inventory-chroot -c chroot pb_sr_ansible-chroot-bootstrap.yml
#
#

- hosts: "_chroot"
  user: root
  connection: local
  gather_facts: no
  pre_tasks:
    - name: mount pseudo file systems
      shell:
        mount -o bind '{{ item.name }}' '/srv/target/{{ item.name }}'
      args:
        creates: '/srv/target/{{ item.name }}/{{ item.creates }}'
      connection: local
      with_items:
        - name: /proc
          creates: 1
        - name: /dev
          creates: 'null'
        - name: /dev/pts
          creates: ptmx
        - name: /sys
          creates: class
      tags:
        - snmpd

- hosts: "_chroot"
  user: root
  connection: chroot
  pre_tasks:
    - name: fix hosts file in chroot
      command:
        cp /etc/hosts /etc/hosts.ansible-saved
        creates=/etc/hosts.ansible-saved
    - name: fix hosts file in chroot
      copy:
        src: /etc/hosts
        dest: /srv/target/etc/hosts
      connection: local

  # Roles are copy/paste from pb_base.yml
  roles:
    - { role: cw.apt, tags: cw.apt, apt_force_update: yes }  
    - { role: cw.ansible-bootstrap, tags: cw.ansible-bootstrap }
    - { role: cw.etckeeper, tags: cw.etckeeper }
    - { role: cw.upstart-services, tags: cw.upstart-services }
    - { role: cw.isc-dhcp-client, tags: cw.isc-dhcp-client }
    - { role: cw.opensmtpd, tags: cw.opensmtpd }
    - { role: cw.lldp, tags: cw.lldp }
    - { role: cw.credentials, tags: cw.credentials }  
    - { role: cw.ssh, tags: cw.ssh }
    - { role: cw.locales, tags: cw.locales }
    - { role: cw.ntp, tags: cw.ntp }
    - { role: cw.base, tags: cw.base }
    - { role: cw.sysctl, tags: cw.sysctl }
    - { role: cw.dell, tags: cw.dell }
    - { role: cw.hp, tags: cw.hp }
     
  post_tasks:
    # We install grub-common here and ignore any kind of error since it
    # would be reconfigured properly after we cheat on grub-mkconfig.
    #
    # This dirty hack is required if / is a tmpfs since grub-mkconfig fails
    # for that configuration. Thus we have to remove the "set -e" from
    # /usr/sbin/grub-mkconfig (see next task).
    - name: update grub-common
      ignore_errors: yes
      shell:
        DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical apt-get install grub-common -y --force-yes

    - name: Remove 'set -e' from /usr/sbin/grub-mkconfig
      shell:
        sed -i -e 's,^\(set -e\),# \1 \# grub-mkconfig does not work well if / is tmpfs,' /usr/sbin/grub-mkconfig
        
    - name: run dist-upgrade
      # Add --force-confold to dpkg run dist-upgrade in real non interactive
      # mode (ei when a configuration file has changed, keep old since this
      # if run on a fresh system).
      shell:
        DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical apt-get dist-upgrade -o Dpkg::Options::='--force-confold' -y --force-yes

    - name: Get installed kernel
      shell:
        ls -1 -X /lib/modules/ | sort -g
      changed_when: False
      register: installed_kernel

    - name: Remove old kernels
      shell:
        apt-get -y --force-yes remove --purge linux-image-{{item}}
      with_items: installed_kernel.stdout_lines[0:-1]

    # Sometimes linux-image-extra is not installed, so don't fail if we
    # cannot remove it.
    - name: Remove old kernels (extra)
      shell:
        apt-get -y --force-yes remove --purge linux-image-extra-{{item}}
      ignore_errors: yes
      with_items: installed_kernel.stdout_lines[0:-1]

    - name: Update grub configuration
      shell:
        update-grub
      ignore_errors: yes
      
    - name: umount pseudo file systems
      shell:
        umount -l '/srv/target/{{ item }}'
      connection: local
      ignore_errors: yes
      with_items:
        - /sys
        - /dev/pts
        - /dev
        - /proc
      tags:
        - snmpd

    - name: fix hosts file in chroot
      command:
        mv /etc/hosts.ansible-saved etc/hosts
        removes=/etc/hosts    
